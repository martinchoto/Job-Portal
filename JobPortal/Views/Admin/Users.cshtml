@using System.Globalization
@model AllUsersQueryModel
@{
	ViewData["Title"] = "Users";
}
<h2 class="text-center mb-3">@ViewData["Title"]</h2>
<hr />
<form method="get">
	<div class="row">
		<div class="form-group col-md-2 text-center">
			<label asp-for="Role"></label>
			<select asp-for="Role" class="form-control">
				<option value="">All</option>
				@foreach (var role in Model.Roles)
				{
					<option value="@role">@role</option>
				}
			</select>
		</div>
		<div class="form-group col-md-2 text-center">
			<label asp-for="UsersPerPage"></label>
			<select asp-for="UsersPerPage" class="form-control">
				<option value="5">5</option>
				<option value="10">10</option>
				<option value="15">15</option>
			</select>
		</div>
		
		<div class="form-group col-md-3 text-center">
			<label asp-for="SearchTerm"></label>
			<input asp-for="SearchTerm" class="form-control" placeholder="...">
		</div>
		<div class="form-group col-md-2 text-center">
			<div class="form-group">
				<label asp-for ="AdminSorting"></label>
				<select asp-for="AdminSorting" class="form-control">
					<option value="0">Newest</option>
					<option value="1">Oldest</option>
				</select>
			</div>
		</div>
		<div class="col-md-1">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Search" class="btn btn-primary" />
			</div>
		</div>
	</div>
</form>
@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}
	var maxPage = Math.Ceiling((double)Model.TotalUsersCount / Model.UsersPerPage);
}
<div class="row mb-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Admin"
		   asp-action="Users"
		   asp-route-role="@Model.Role"
		   asp-route-usersPerPage="@Model.UsersPerPage"
		   asp-route-currentPage="@previousPage"
		   asp-route-searchTerm="@Model.SearchTerm"
		   asp-route-adminSorting="@((int)Model.AdminSorting)"><<</a>
	</div>
	@{
		var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
		!Model.Users.Any();
	}
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Admin"
		   asp-action="Users"
		   asp-route-role="@Model.Role"
		   asp-route-usersPerPage="@Model.UsersPerPage"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-searchTerm="@Model.SearchTerm"
		   asp-route-adminSorting="@((int)Model.AdminSorting)">>></a>
	</div>
</div>
@if (!Model.Users.Any())
{
	<h2 class="text-center">No users found by the given criteria!</h2>
}
else
{
	<table class="table text-center table-hover table-dark">
	<thead>
		<tr>
			<th scope="col">Username</th>
			<th scope="col">Email</th>
			<th scope="col">Created On</th>
			<th scope="col">Role</th>
			<th scope="col">Action</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var user in Model.Users)
		{
			<tr>
				<td scope="row">@user.UserName</td>
				<td>@user.Email</td>
				<td>@user.CreatedOn.ToString(DataConstants.DATE_FORMAT, CultureInfo.InvariantCulture)</td>
				<td>@user.Role</td>
				<td>
						<a asp-route-id="@user.Id" onclick="return confirmDelete(`@user.UserName`)" asp-action="DeleteUser"
					   class="btn btn-danger p-3 fw-bold">Ban</a>
				</td>
			</tr>
		}
	</tbody>
</table>
<h6>Page @Model.CurrentPage from @maxPage</h6>
}
@section Scripts{
	<script>
		function confirmDelete(userName) {
			const confirmation = confirm(`Do you seriously want to delete user ${userName}?`);
			if (confirmation) {
				return true;
			}
			else {
				return false;
			}
		}
	</script>
}
